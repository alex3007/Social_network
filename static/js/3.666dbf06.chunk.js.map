{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/myphoto.png","components/Profile/Myposts/Myposts.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/Profile.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/Myposts.jsx","components/Profile/Myposts/MypostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","profileContainer","profile","profileForm","profileData","profileImage","profileDescription","title","profileStatus","changeImage","changeImageLabel","__webpack_require__","p","postsBlock","textArea","posts","postItems","item","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_iterableToArrayLimit","unsupportedIterableToArray","TypeError","_nonIterableRest","ProfileStatusWithHooks","props","_useState2","useState","editMode","setEditMode","_useState4","status","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","error","onSubmit","className","cls","formSummaryError","createField","Input","type","Textarea","ProfileData","_ref2","isOwner","goToEditMode","fullName","lookingForAJob","scills","aboutMe","onClick","ProfileInfo","saveProfile","Preloader","src","userPhoto","mainPhoto","alt","male","userMale","userFemale","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","likesCount","message","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","postsElements","map","Myposts_Post_Post","profilePosts","React","createRef","values","addPost","newPostText","MypostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Myposts","Profile","Profile_ProfileInfo_ProfileInfo","Myposts_MypostsContainer","ProfileContainer","userId","this","match","params","getUserProfile","authorizedUserId","history","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.666dbf06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"ProfileInfo_profileContainer__15GWy\",\"profile\":\"ProfileInfo_profile__iERp3\",\"profileForm\":\"ProfileInfo_profileForm__3ju2u\",\"profileData\":\"ProfileInfo_profileData__325cU\",\"profileImage\":\"ProfileInfo_profileImage__21oE-\",\"profileDescription\":\"ProfileInfo_profileDescription__31pfW\",\"title\":\"ProfileInfo_title__3255G\",\"profileStatus\":\"ProfileInfo_profileStatus__LB8HJ\",\"changeImage\":\"ProfileInfo_changeImage__1_f1w\",\"changeImageLabel\":\"ProfileInfo_changeImageLabel__l2gwq\"};","module.exports = __webpack_public_path__ + \"static/media/myphoto.63d98ffe.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Myposts_postsBlock__3AeYe\",\"textArea\":\"Myposts_textArea__LssDf\",\"posts\":\"Myposts_posts__24QMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItems\":\"Post_postItems__1lZt6\",\"item\":\"Post_item__3SBMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1gY3w\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport cls from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={cls.profileForm}>\r\n\r\n            {error && <div className={cls.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField(\"My professional skills\", \"scills\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n            <button className='button'>Save</button>\r\n        </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport cls from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/images/myphoto.png';\r\nimport userMale from '../../../assets/images/male.png';\r\nimport userFemale from '../../../assets/images/female.png';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    const UserImage = () => {\r\n        if (isOwner) {\r\n            return <img src={userPhoto} className={cls.mainPhoto} alt='avatar'/>\r\n        } else if (profile.male) {\r\n            return <img src={userMale} className={cls.mainPhoto} alt='avatar'/>\r\n        } else {\r\n            return <img src={userFemale} className={cls.mainPhoto} alt='avatar'/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            <div className={cls.profile}>\r\n                <div className={cls.profileImage}>\r\n                    <UserImage/>\r\n                </div>\r\n\r\n                <div className={cls.profileDescription}>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={profile} isOwner={isOwner}/>}\r\n                </div>\r\n                <div className={cls.profileStatus}>\r\n                    <ProfileStatusWithHooks status={isOwner ? profile.status : status}\r\n                                            updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={cls.profileForm}>\r\n        <div className={cls.profileData}>\r\n            <b>Full name:</b> {profile.fullName}\r\n            <hr/>\r\n        </div>\r\n        <div className={cls.profileData}>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            <hr/>\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div className={cls.profileData}>\r\n            <b>My professional skills:</b> {profile.scills}\r\n            <hr/>\r\n        </div>\r\n        }\r\n        <div className={cls.profileData}>\r\n            <b>About me:</b> {profile.aboutMe}\r\n            <hr/>\r\n        </div>\r\n        {isOwner && <div>\r\n            <button className='button' onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport cls from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={cls.postItems}>\r\n            <div className={cls.item}>\r\n                <p><i className='fa fa-heart'/>{props.likesCount}</p>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Post;","import React from 'react';\r\nimport cls from './Myposts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(55);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button className='button'>Add post</button>\r\n        </div>\r\n    </form>;\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        !props.isOwner ?\r\n            (props.profilePosts && props.profilePosts.posts.map(p => <Post message={p.message}\r\n                                                                           likesCount={p.likesCount}/>)) :\r\n            props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={cls.postsBlock}>\r\n            <h2>My posts</h2>\r\n            <div className={cls.posts}>\r\n                {postsElements}\r\n            </div>\r\n\r\n            <div className={cls.textArea}>\r\n                {props.isOwner &&\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport Myposts from \"./Myposts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts);\r\n\r\nexport default MypostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MypostsContainer from \"./Myposts/MypostsContainer\";\r\nimport cls from './Profile.module.css'\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={cls.profile}>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MypostsContainer isOwner={props.isOwner}\r\n                              profilePosts={props.profile}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getProfile,getUserProfile, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        this.props.getProfile();\n        this.props.getStatus();\n        } else {\n            this.props.getUserProfile(userId);\n        }\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {      \n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n};\n\nexport default compose(\n    connect(mapStateToProps, {getProfile, getUserProfile, getStatus, updateStatus, saveProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}