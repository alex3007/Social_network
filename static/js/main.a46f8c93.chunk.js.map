{"version":3,"sources":["api/api.js","Assets/images/friend.jpg","Redux/dialogs-reducer.js","Users/User.module.css","Assets/preloaders/spinning-circles.svg","Assets/images/message.png","Assets/images/intro.png","common/FormsControls/FormsControls.js","serviceWorker.js","Navbar/Navbar.jsx","utils/object-helpers.js","Redux/users-reducer.js","common/Paginator/Paginator.jsx","Users/User.jsx","Users/Users.jsx","Redux/users-selectors.js","Users/UsersContainer.jsx","Header/Header.jsx","Redux/auth-reducer.js","Header/HeaderContainer.jsx","Login/Login.jsx","Redux/app-reducer.js","Redux/sidebar-reducer.js","Redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","common/FormsControls/FormsControls.module.css","Header/Header.module.css","common/Preloader/Preloader.js","utils/validators/validators.js","common/Paginator/Paginator.module.css","Navbar/Navbar.module.css","Redux/profile-reducer.js"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","login","email","password","rememberMe","captcha","logout","getCaptchaUrl","module","exports","p","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Object","C_Users_WebstormProjects_Untitled1_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_WebstormProjects_Untitled1_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","userPhoto","selectedPage","FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","Textarea","props","restProps","child","C_Users_WebstormProjects_Untitled1_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_4__","validate","Boolean","window","location","hostname","match","Navbar","react_default","cls","navbar","navbarItem","react_router_dom","to","navbarLink","activeClassName","active","activel","activeclassName","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","objectSpread","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","followed","count","toConsumableArray","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","defineProperty","pageNumber","key","e","User","user","src","photos","small","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","Fragment","Preloader","src_Users_Users","React","Component","compose","connect","log","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","_callee","_context","totalCount","_x","Header","header","headerContainer","headerLogo","title","headerTitle","headerLogin","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","_response$data$data","_login","url","authReducer","HeaderContainer","src_Header_Header","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","stopSubmit","_error","react_router","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","addEventListener","catchAllUnhandledErrors","removeEventListener","Header_HeaderContainer","src_Navbar_Navbar","exact","path","render","Users_UsersContainer","src_Login_Login","intro","alt","AppContainer","withRouter","promise","Promise","all","AppJs","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","header_logo-spin","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Assets_preloaders_spinning_circles_svg__WEBPACK_IMPORTED_MODULE_1__","_Assets_preloaders_spinning_circles_svg__WEBPACK_IMPORTED_MODULE_1___default","width","height","position","display","backgroundColor","margin","preloader","maxLengthCreator","value","maxLength","friendsBlock","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","C_Users_WebstormProjects_Untitled1_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_WebstormProjects_Untitled1_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","t0","file","_ref5","_callee5","getState","_context5","abrupt","reject","newPost","C_Users_WebstormProjects_Untitled1_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_WebstormProjects_Untitled1_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId"],"mappings":"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","file":"static/js/main.a46f8c93.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"17d70425-6a66-487e-950c-b3b64159370e\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n};\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile );\n    }\n};\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n};\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n};\n\n\n","module.exports = __webpack_public_path__ + \"static/media/friend.595172f9.jpg\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Alex'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Vera'},\r\n        {id: 5, name: 'Viktor'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How are your?'},\r\n        {id: 3, message: 'Yo!'},\r\n        {id: 4, message: 'Hello!'},\r\n        {id: 5, message: 'Good day!'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__3S7BH\",\"selectedPage\":\"User_selectedPage__3_lSx\"};","module.exports = __webpack_public_path__ + \"static/media/spinning-circles.9044b20b.svg\";","module.exports = __webpack_public_path__ + \"static/media/message.f0fb1b34.png\";","module.exports = __webpack_public_path__ + \"static/media/intro.b8c9a73e.png\";","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {required} from \"../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n};\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport cls from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={cls.navbar}>\r\n            <div className={cls.navbarItem}>\r\n                <i className=\"fa fa-address-book\"/>\r\n                <NavLink to=\"/profile\" className={cls.navbarLink} activeClassName={cls.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${cls.navbarItem} ${cls.activel}`}>\r\n                <i className=\"fa fa-comments\"/>\r\n                <NavLink to=\"/dialogs\" className={cls.navbarLink} activeClassName={cls.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${cls.navbarItem} ${cls.activel}`}>\r\n                <i className=\"fa fa-user\"/>\r\n                <NavLink to=\"/users\" className={cls.navbarLink} activeClassName={cls.active}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={cls.navbarItem}>\r\n                <i className=\"fa fa-newspaper-o\"/>\r\n                <NavLink className={cls.navbarLink} activeclassName={cls.active}>News</NavLink>\r\n            </div>\r\n            <div className={cls.navbarItem}>\r\n                <i className=\"fa fa-headphones\"/>\r\n                <NavLink className={cls.navbarLink} activeclassName={cls.active}>Music</NavLink>\r\n            </div>\r\n            <div className={cls.navbarItem}>\r\n                <i className=\"fa fa-play\"/>\r\n                <NavLink className={cls.navbarLink} activeclassName={cls.active}> Video</NavLink>\r\n            </div>\r\n            <div className={cls.navbarItem}>\r\n                <i className=\"fa fa-user-circle \"/>\r\n                <NavLink className={cls.navbarLink} activeclassName={cls.active}>Friends</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={cn(styles.paginator)}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport styles from \"./User.module.css\";\nimport userPhoto from \"../Assets/images/friend.jpg\";\n\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n       <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => { unfollow(user.id) }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => { follow(user.id) }}>\n                                      Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div><p><b>Name:</b> {user.name}</p></div>\n                        <div><p>{user.status}</p></div>\n                    </span>\n                    <span>\n                        <div><p><b>Country:</b> {\"user.location.country\"}</p></div>\n                        <div><p><b>City:</b> {\"user.location.city\"}</p></div>\n                    </span>\n                </span>\n            </div>)\n};\n\nexport default User;\n","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    unfollow, toggleFollowingProgress, requestUsers\n} from '../Redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../Redux/users-selectors\";\n\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n\n    render() {\n\n        return <>\n            { this.props.isFetching ? <Preloader /> : null }\n            <Users totalUsersCount={this.props.totalUsersCount}\n                        pageSize={this.props.pageSize}\n                        currentPage={this.props.currentPage}\n                        onPageChanged={this.onPageChanged}\n                        users={this.props.users}\n                        follow={this.props.follow}\n                        unfollow={this.props.unfollow}\n                        followingInProgress={this.props.followingInProgress}\n             />\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n   console.log('mapStateToProps USERS');\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n};\n\n\nexport default compose(\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\n)(UsersContainer)","import React from 'react';\r\nimport cls from './Header.module.css';\r\nimport title from \"./../Assets/images/message.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={cls.header}>\r\n            <div className={cls.headerContainer}>\r\n                <img className={cls.headerLogo} src={title}/>\r\n                <p className={cls.headerTitle}>Сheerful conversation!</p>\r\n                <div className={cls.headerLogin}>\r\n                    {props.isAuth\r\n                        ? <div>{props.login} <button onClick={props.logout}>Log out</button></div>\r\n                        : <NavLink to={'/login'}>Login</NavLink>}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null // if null, then captcha is not required\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n});\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        // success, get auth data\n        dispatch(getAuthUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../Redux/auth-reducer\";\n\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../Redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form  onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            { captchaUrl && <img src={captchaUrl} />}\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\n\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n};\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div className={style.form}>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/><br/>\n        <p><b>For the test vuing enter:</b><br/>\n            Email: free@samuraijs.com<br/>\n            Password: free<br/>\n        </p>\n    </div>\n};\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false,\n    globalError: null\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<div>loading...</div>} >\n            <Component {...props} />\n        </React.Suspense>\n    };\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './Navbar/Navbar';\nimport {HashRouter, Redirect, Switch, Route, withRouter} from \"react-router-dom\";\nimport UsersContainer from \"./Users/UsersContainer\";\nimport HeaderContainer from \"./Header/HeaderContainer\";\nimport LoginPage from \"./Login/Login\";\nimport intro from './Assets/images/intro.png';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./common/Preloader/Preloader\";\nimport store from \"./Redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./Profile/ProfileContainer'));\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='appPage'>\n                <HeaderContainer/>\n                <div className='appPageContainer'>\n                    <div className='appPageNavbar'>\n                        <Navbar/>\n                    </div>\n                    <div className='appPageContent'>\n                        <Switch>\n                            <Route exact path='/'\n                                   render={() => <Redirect to={\"/profile\"}/>}/>\n\n                            <Route path='/dialogs'\n                                   render={withSuspense(DialogsContainer)}/>\n\n                            <Route path='/profile/:userId?'\n                                   render={withSuspense(ProfileContainer)}/>\n\n                            <Route path='/users'\n                                   render={() => <UsersContainer/>}/>\n\n                            <Route path='/login'\n                                   render={() => <LoginPage/>}/>\n\n                            <Route path='*'\n                                   render={() => <div>404 NOT FOUND</div>}/>\n\n                        </Switch>\n                        <img className=\"appPageIntro\" src={intro} alt='intro'/>\n                    </div>\n                </div>\n                <footer className=\"footer\"/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst AppJs = (props) => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n};\n\nexport default AppJs;\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppJs from './App';\n\nReactDOM.render(<AppJs/>,\n    document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2VxNa\",\"error\":\"FormsControls_error__uw8je\",\"formSummaryError\":\"FormsControls_formSummaryError__1aKyz\",\"form\":\"FormsControls_form__1w5_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__1YxwT\",\"headerLogo\":\"Header_headerLogo__3dXwC\",\"header_logo-spin\":\"Header_header_logo-spin__3DZJJ\",\"header\":\"Header_header__2nOzq\",\"headerTitle\":\"Header_headerTitle__Zlstk\",\"headerLogin\":\"Header_headerLogin__3snX_\"};","import React from 'react';\nimport preloader from \"../../Assets/preloaders/spinning-circles.svg\";\n\nlet Preloader = (props) => {\n    return <div style={\n        {\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            display: 'flex',\n            backgroundColor: 'rgba(255, 255, 255, 0.7)'\n        }}>\n        <img style={{margin: 'auto'}} src={preloader}/>\n    </div>\n};\n\nexport default Preloader;","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3iQMr\",\"pageNumber\":\"Paginator_pageNumber__2IETB\",\"selectedPage\":\"Paginator_selectedPage__LCPHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2bdKG\",\"navbarItem\":\"Navbar_navbarItem__2sLyA\",\"navbarLink\":\"Navbar_navbarLink__Va1pO\",\"active\":\"Navbar_active__3nIBX\",\"friendsBlock\":\"Navbar_friendsBlock__39HTz\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Good luck!', likesCount: 12},\r\n        {id: 2, message: 'Frontend is my pleasure', likesCount: 11},\r\n        {id: 3, message: 'You are success if you like your job', likesCount: 11},\r\n        {id: 4, message: 'To be or not to be', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            debugger;\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}