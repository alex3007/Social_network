{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/myphoto.jpg","components/Profile/Myposts/Myposts.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/Myposts.jsx","components/Profile/Myposts/MypostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","profileContainer","profile","profileForm","profileData","profileImage","profileDescription","title","profileStatus","changeImage","changeImageLabel","__webpack_require__","p","postsBlock","textArea","posts","postItems","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","error","onSubmit","className","cls","formSummaryError","createField","Input","type","Textarea","ProfileData","_ref2","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","onClick","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","mainPhoto","alt","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","friend","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","postsElements","map","Myposts_Post_Post","React","createRef","values","addPost","newPostText","MypostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Myposts","Profile","Profile_ProfileInfo_ProfileInfo","Myposts_MypostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c0f58ec7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"ProfileInfo_profileContainer__3nhQN\",\"profile\":\"ProfileInfo_profile__1fFgQ\",\"profileForm\":\"ProfileInfo_profileForm__2lXCu\",\"profileData\":\"ProfileInfo_profileData__2HAYd\",\"profileImage\":\"ProfileInfo_profileImage__2Sh-D\",\"profileDescription\":\"ProfileInfo_profileDescription__2JCq6\",\"title\":\"ProfileInfo_title__3iprF\",\"profileStatus\":\"ProfileInfo_profileStatus__1tjd5\",\"changeImage\":\"ProfileInfo_changeImage___VmBw\",\"changeImageLabel\":\"ProfileInfo_changeImageLabel__1WPci\"};","module.exports = __webpack_public_path__ + \"static/media/myphoto.ba0c4a8e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Myposts_postsBlock__231nS\",\"textArea\":\"Myposts_textArea__3qR_A\",\"posts\":\"Myposts_posts__3yiQy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItems\":\"Post_postItems__N_XmL\",\"item\":\"Post_item__2519l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2UdPO\"};","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport cls from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={cls.profileForm}>\r\n\r\n            {error && <div className={cls.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n            <button className='button'>Save</button>\r\n        </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport cls from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/images/myphoto.jpg';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            <div className={cls.profile}>\r\n                <div className={cls.profileImage}>\r\n                    <img src={profile.photos.large || userPhoto} className={cls.mainPhoto} alt='avatar'/>\r\n                    {isOwner && <div><input  className={cls.changeImage} type={\"file\"} onChange={onMainPhotoSelected}/>\r\n                    <label className={cls.changeImageLabel}>Change image</label>\r\n                    </div>}\r\n                </div>\r\n                <div className={cls.profileDescription}>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={profile} isOwner={isOwner}/>}\r\n                </div>\r\n                <div className={cls.profileStatus}>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={cls.profileForm}>\r\n        <div className={cls.profileData}>\r\n            <b>Full name:</b> {profile.fullName}\r\n            <hr/>\r\n        </div>\r\n        <div className={cls.profileData}>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            <hr/>\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div className={cls.profileData}>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n            <hr/>\r\n        </div>\r\n        }\r\n        <div className={cls.profileData}>\r\n            <b>About me:</b> {profile.aboutMe}\r\n            <hr/>\r\n        </div>\r\n        {isOwner && <div>\r\n            <button className='button' onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport cls from './Post.module.css';\r\nimport friend from '../../../../assets/images/friend.jpg';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={cls.postItems}>\r\n            <div className={cls.item}>\r\n\r\n                <img src={friend} alt=\"avatar\"/>\r\n\r\n                {props.message}\r\n            </div>\r\n            <p><i className='fa fa-heart'/>{props.likesCount}</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Post;","import React from 'react';\r\nimport cls from './Myposts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(55);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button className='button'>Add post</button>\r\n        </div>\r\n    </form>;\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={cls.postsBlock}>\r\n            <h2>My posts</h2>\r\n            <div className={cls.posts}>\r\n                {postsElements}\r\n            </div>\r\n            <div className={cls.textArea}>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport Myposts from \"./Myposts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts);\r\n\r\nexport default MypostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MypostsContainer from \"./Myposts/MypostsContainer\";\r\nimport cls from './Profile.module.css'\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={cls.profile}>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MypostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {      \n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n};\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}