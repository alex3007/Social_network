{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/myphoto.png","components/Profile/Myposts/Myposts.module.css","components/Profile/Myposts/Post/Post.module.css","components/Profile/Profile.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Myposts/Post/Post.jsx","components/Profile/Myposts/Myposts.jsx","components/Profile/Myposts/MypostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","profileContainer","profile","profileForm","profileData","profileImage","profileDescription","title","profileStatus","changeImage","changeImageLabel","__webpack_require__","p","postsBlock","textArea","textAreaBlue","posts","postItems","item","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_iterableToArrayLimit","unsupportedIterableToArray","TypeError","_nonIterableRest","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","error","react_default","a","createElement","onSubmit","className","cls","formSummaryError","createField","Input","type","Textarea","ProfileData","_ref2","isOwner","goToEditMode","fullName","lookingForAJob","scills","aboutMe","onClick","ProfileInfo","status","updateStatus","saveProfile","_useState2","useState","editMode","setEditMode","Preloader","src","userPhoto","mainPhoto","alt","male","userMale","userFemale","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","Post","props","likesCount","message","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","postsElements","map","Myposts_Post_Post","profilePosts","React","createRef","values","addPost","newPostText","MypostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Myposts","Profile","Profile_ProfileInfo_ProfileInfo","Myposts_MypostsContainer","ProfileContainer","userId","this","match","params","getUserProfile","authorizedUserId","history","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.9d24ff5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"ProfileInfo_profileContainer__15GWy\",\"profile\":\"ProfileInfo_profile__iERp3\",\"profileForm\":\"ProfileInfo_profileForm__3ju2u\",\"profileData\":\"ProfileInfo_profileData__325cU\",\"profileImage\":\"ProfileInfo_profileImage__21oE-\",\"profileDescription\":\"ProfileInfo_profileDescription__31pfW\",\"title\":\"ProfileInfo_title__3255G\",\"profileStatus\":\"ProfileInfo_profileStatus__LB8HJ\",\"changeImage\":\"ProfileInfo_changeImage__1_f1w\",\"changeImageLabel\":\"ProfileInfo_changeImageLabel__l2gwq\"};","module.exports = __webpack_public_path__ + \"static/media/myphoto.63d98ffe.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Myposts_postsBlock__3AeYe\",\"textArea\":\"Myposts_textArea__LssDf\",\"textAreaBlue\":\"Myposts_textAreaBlue__p_7vf\",\"posts\":\"Myposts_posts__24QMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItems\":\"Post_postItems__1lZt6\",\"item\":\"Post_item__3SBMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1gY3w\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport cls from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={cls.profileForm}>\r\n\r\n            {error && <div className={cls.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                {createField(\"My professional skills\", \"scills\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n            <button className='button'>Save</button>\r\n        </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport cls from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/images/myphoto.png';\r\nimport userMale from '../../../assets/images/male.png';\r\nimport userFemale from '../../../assets/images/female.png';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n   let userStatus = <ProfileStatusWithHooks status={isOwner ? profile.status : status} updateStatus={updateStatus}/>\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    const UserImage = () => {\r\n        if (isOwner) {\r\n            return <img src={userPhoto} className={cls.mainPhoto} alt='avatar'/>\r\n        } else if (profile.male) {\r\n            return <img src={userMale} className={cls.mainPhoto} alt='avatar'/>\r\n        } else {\r\n            return <img src={userFemale} className={cls.mainPhoto} alt='avatar'/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={cls.profileContainer}>\r\n            <div className={cls.profile}>\r\n                <div className={cls.profileImage}>\r\n                    <UserImage/>\r\n                </div>\r\n\r\n                <div className={cls.profileDescription}>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={profile} isOwner={isOwner}/>}\r\n                </div>\r\n                <div className={cls.profileStatus}>\r\n                   <br/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={cls.profileForm}>\r\n        <div className={cls.profileData}>\r\n            <b>Full name:</b> {profile.fullName}\r\n            <hr/>\r\n        </div>\r\n        <div className={cls.profileData}>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            <hr/>\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div className={cls.profileData}>\r\n            <b>My professional skills:</b> {profile.scills}\r\n            <hr/>\r\n        </div>\r\n        }\r\n        <div className={cls.profileData}>\r\n            <b>About me:</b> {profile.aboutMe}\r\n            <hr/>\r\n        </div>\r\n        {isOwner && <div>\r\n            <button className='button' onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n    </div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport cls from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={cls.postItems}>\r\n            <div className={cls.item}>\r\n                <p><i className='fa fa-heart'/>{props.likesCount}</p>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Post;","import React from 'react';\r\nimport cls from './Myposts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(55);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n               validate={[required, maxLength10]}/>\r\n        <button className='button'>Add post</button>\r\n    </form>;\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        !props.isOwner ?\r\n            (props.profilePosts && props.profilePosts.posts.map(p => <Post message={p.message}\r\n                                                                           likesCount={p.likesCount}/>)) :\r\n            props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={cls.postsBlock}>\r\n            <h2>My posts</h2>\r\n            <div className={cls.posts}>\r\n                {postsElements}\r\n            </div>\r\n                <div className={!props.isOwner ?cls.textAreaBlue:cls.textArea}>\r\n                    {props.isOwner &&\r\n                    <AddNewPostFormRedux onSubmit={onAddPost}/>}\r\n                </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport Myposts from \"./Myposts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts);\r\n\r\nexport default MypostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MypostsContainer from \"./Myposts/MypostsContainer\";\r\nimport cls from './Profile.module.css'\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={cls.profile}>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MypostsContainer isOwner={props.isOwner}\r\n                              profilePosts={props.profile}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getProfile,getUserProfile, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        this.props.getProfile();\n        this.props.getStatus();\n        } else {\n            this.props.getUserProfile(userId);\n        }\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {      \n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n};\n\nexport default compose(\n    connect(mapStateToProps, {getProfile, getUserProfile, getStatus, updateStatus, saveProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}