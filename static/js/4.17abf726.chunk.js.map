{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogsArea","dialogs","names","name","messages","textArea","buttonArea","DialogItem","props","path","id","react_default","a","createElement","className","cls","react_router_dom","to","message","Message","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","compose","connect","dispatch","sendMessageCreator"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,YAAA,6BAAAC,QAAA,yBAAAC,MAAA,uBAAAC,KAAA,sBAAAC,SAAA,0BAAAC,SAAA,0BAAAC,WAAA,6HCYHC,EATI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAIZ,MACvBQ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASF,UAAWC,IAAIZ,KAAMc,GAAIR,GAAOD,EAAML,KAAK,KACpDQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAIG,SAAUV,EAAMU,WCF7BC,EAJC,SAACX,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAIG,SAAUV,EAAMU,2CCEzCE,EAAeC,YAAiB,IAiBvBC,cAAU,CAACC,KAAM,2BAAjBD,CAfQ,SAACd,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMW,SAAUhB,EAAMiB,cAClBd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBAAqB5B,KAAK,oBAEjDQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAIT,YAChBK,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,YCsBDkB,EAhCC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMhC,QAAQmC,IAAI,SAAAC,GAAC,OAAI1B,EAAAC,EAAAC,cAACyB,EAAD,CAAYnC,KAAMkC,EAAElC,KAAMoC,IAAKF,EAAE3B,GAAIA,GAAI2B,EAAE3B,OACpF8B,EAAmBP,EAAM7B,SAASgC,IAAI,SAAAK,GAAC,OAAI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAASxB,QAASuB,EAAEvB,QAASqB,IAAKE,EAAE/B,OAC9DuB,EAAMU,eAO3B,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAIf,aAChBW,EAAAC,EAAAC,cAAA,sBACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAId,SAChBU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAIb,OACfiC,GAELxB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAIX,UACfoC,IAGb7B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAIV,UAChBM,EAAAC,EAAAC,cAAC+B,EAAD,CAAgBpB,SAjBR,SAACqB,GACjBrC,EAAMsC,YAAYD,EAAOF,qCCIlBI,sBACXC,YAdkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAGF,SAACe,GACtB,MAAO,CACHH,YAAa,SAACH,GACVM,EAASC,YAAmBP,QAKzBI,CACmCf","file":"static/js/4.17abf726.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsArea\":\"Dialogs_dialogsArea__1QbxC\",\"dialogs\":\"Dialogs_dialogs__WVbuK\",\"names\":\"Dialogs_names__2eIJH\",\"name\":\"Dialogs_name__2D4Ly\",\"messages\":\"Dialogs_messages__1V1XB\",\"textArea\":\"Dialogs_textArea__1Dj13\",\"buttonArea\":\"Dialogs_buttonArea__UIfEc\"};","import React from 'react';\r\nimport cls from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={cls.name}>\r\n        <NavLink className={cls.name} to={path}>{props.name+':'}</NavLink>\r\n        <div className={cls.message}>{props.message}</div>\r\n    </div>\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport cls from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={cls.message}>{props.message}</div>\r\n};\r\n\r\nexport default Message;","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport cls from '../Dialogs.module.css'\n\nconst maxLength100 = maxLengthCreator(30);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength100]}\n                       placeholder='Enter your message' name=\"newMessageBody\" />\n            </div>\n            <div className={cls.buttonArea}>\n                <button className='button'>Send</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\r\nimport cls from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={cls.dialogsArea}>\r\n            <h2>Messages</h2>\r\n                <div className={cls.dialogs}>\r\n                    <div className={cls.names}>\r\n                        {dialogsElements}\r\n                    </div>\r\n                    <div className={cls.messages}>\r\n                        {messagesElements}\r\n                    </div>\r\n                </div>\r\n            <div className={cls.textArea}>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps))(Dialogs);"],"sourceRoot":""}