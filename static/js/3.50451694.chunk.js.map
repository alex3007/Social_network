{"version":3,"sources":["Profile/ProfileInfo/ProfileInfo.module.css","Assets/images/myphoto.jpg","Profile/Myposts/Myposts.module.css","Profile/Myposts/Post/Post.module.css","Profile/Profile.module.css","Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Profile/ProfileInfo/ProfileDataForm.jsx","Profile/ProfileInfo/ProfileInfo.jsx","Profile/Myposts/Post/Post.jsx","Profile/Myposts/Myposts.jsx","Profile/Myposts/MypostsContainer.jsx","Profile/Profile.jsx","Profile/ProfileContainer.jsx"],"names":["module","exports","content","image_container","content_image","description","__webpack_require__","p","postsBlock","textArea","buttonAddPost","item","profile","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","s","contact","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","cls","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","mainPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","friend","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","postsElements","posts","Myposts_Post_Post","React","createRef","values","addPost","newPostText","MypostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Myposts","Profile","Profile_ProfileInfo_ProfileInfo","Myposts_MypostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","src_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.50451694.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__11S3N\",\"image_container\":\"ProfileInfo_image_container__UIQaj\",\"content_image\":\"ProfileInfo_content_image__2dC2Z\",\"description\":\"ProfileInfo_description__2MZeb\"};","module.exports = __webpack_public_path__ + \"static/media/myphoto.ba0c4a8e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Myposts_postsBlock__2JCNy\",\"textArea\":\"Myposts_textArea__2DBYT\",\"buttonAddPost\":\"Myposts_buttonAddPost__1p-zJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1JrN_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1vY5l\"};","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React,{useState} from 'react';\r\nimport cls from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../Assets/images/myphoto.jpg';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={cls.description}>\r\n                <img src={profile.photos.large || userPhoto} className={cls.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n};\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={cls.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport cls from './Post.module.css';\r\nimport friend from '../../../Assets/images/friend.jpg';\r\n\r\nconst Post = (props) => {\r\n\r\n        return (\r\n\r\n        <div className={cls.item}>\r\n\r\n            <img src={friend} alt=\"avatar\"/>\r\n\r\n            {props.message}\r\n            <p>likes:{props.likesCount}</p>\r\n        </div>\r\n    );\r\n    };\r\n    export default Post;","import React from 'react';\r\nimport s from './Myposts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../Redux/profile-reducer\";\r\nimport Myposts from \"./Myposts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MypostsContainer = connect(mapStateToProps, mapDispatchToProps)(Myposts);\r\n\r\nexport default MypostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MypostsContainer from \"./Myposts/MypostsContainer\";\r\nimport cls from './Profile.module.css'\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n\r\n        <div className={cls.profile}>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MypostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../Redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {      \n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n};\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}