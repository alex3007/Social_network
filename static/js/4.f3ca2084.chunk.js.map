{"version":3,"sources":["Dialogs/Dialogs.module.css","Dialogs/DialogItem/DialogItem.jsx","Dialogs/Message/Message.jsx","Dialogs/AddMessageForm/AddMessageForm.jsx","Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","dialog","messages","message","textArea","buttonAddPost","DialogItem","props","path","id","react_default","a","createElement","className","s","react_router_dom","to","name","Message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","newMessageBody","isAuth","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","react_router","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,yBAAAC,SAAA,0BAAAC,cAAA,gICWHC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,OAAS,IAAMa,IAAEd,QACtCU,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAIR,GAAOD,EAAMU,QCDnBC,EAJC,SAACX,GACb,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEb,QAASM,EAAMJ,mDCCtCgB,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,2BAAjBD,CAfQ,SAACd,GACpB,OACIG,EAAAC,EAAAC,cAAA,QAAMW,SAAUhB,EAAMiB,cAClBd,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBAAqBb,KAAK,oBAEjDP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BCoBDmB,EA5BC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMlC,QAAQqC,IAAK,SAAAC,GAAC,OAAI1B,EAAAC,EAAAC,cAACyB,EAAD,CAAYpB,KAAMmB,EAAEnB,KAAMqB,IAAKF,EAAE3B,GAAIA,GAAI2B,EAAE3B,OACrF8B,EAAmBP,EAAM9B,SAASiC,IAAK,SAAAK,GAAC,OAAI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAStC,QAASqC,EAAErC,QAASmC,IAAKE,EAAE/B,OAC/DuB,EAAMU,eAM3B,OAAKnC,EAAMoC,OAGPjC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEhB,SACdY,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEf,cACZmC,GAENxB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,UACdQ,EAAAC,EAAAC,cAAA,WAAO2B,IAGX7B,EAAAC,EAAAC,cAACgC,EAAD,CAAgBrB,SAfJ,SAACsB,GACjBtC,EAAMuC,YAAYD,EAAOH,oBAGHhC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAU/B,GAAI,4DChBxCgC,EAA6B,SAAChB,GAAD,MAAY,CACzCW,OAAQX,EAAMiB,KAAKN,gBCiBRO,sBACXC,YAdkB,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAGF,SAACmB,GACtB,MAAO,CACHN,YAAa,SAACJ,GACVU,EAASC,YAAmBX,QDTR,SAACY,GAAc,IAErCC,EAFqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAjB,IAAA,SAAA4B,MAAA,WAInC,OAAKP,KAAKpD,MAAMoC,OAETjC,EAAAC,EAAAC,cAAC0C,EAAcK,KAAKpD,OAFIG,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAU/B,GAAG,eAJTuC,EAAA,CAEXY,IAAMb,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,ICI9DL,CAGbnB","file":"static/js/4.f3ca2084.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__mBztL\",\"dialogsItems\":\"Dialogs_dialogsItems__1pv23\",\"active\":\"Dialogs_active__2NI8r\",\"dialog\":\"Dialogs_dialog__1x5HV\",\"messages\":\"Dialogs_messages__1zmjC\",\"message\":\"Dialogs_message__2WKLN\",\"textArea\":\"Dialogs_textArea__3fDY6\",\"buttonAddPost\":\"Dialogs_buttonAddPost__3JCOD\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n};\r\n\r\nexport default Message;","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength50]}\n                       placeholder='Enter your message' name=\"newMessageBody\" />\n            </div>\n            <div>\n                <button>Send222</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}